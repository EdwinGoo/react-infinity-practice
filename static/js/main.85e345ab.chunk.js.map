{"version":3,"sources":["components/Counter.tsx","store/modules/counter.tsx","containers/CounterContainer.tsx","practice/HooksUseEffect.tsx","store/modules/auth.tsx","utils/storage.tsx","practice/MyPage.tsx","practice/Home.tsx","practice/HooksUseMemo.tsx","practice/HooksUseMemoTouseCallback.tsx","practice/HooksUseReducer.tsx","practice/HooksRef.tsx","utils/useInput.tsx","practice/HooksCustom.tsx","practice/ImmutabilitySimple.tsx","practice/ImmutabilityPractice.tsx","App.tsx","serviceWorker.ts","store/modules/index.tsx","index.tsx"],"names":["Counter","value","diff","onIncrease","onDiffNumPlus","onClick","INCREASE","DIFFNUMPLUS","increase","type","diffnumplus","payload","initialState","count","counter","state","action","parsediff","Number","CounterContainer","useSelector","dispatch","useDispatch","useState","diffNum","setDiffNum","onChange","e","target","HooksUseEffect","book","setBook","mountState","setMountState","changeBookNameHooks","useCallback","useEffect","console","log","AUTHID","userId","auth","storage","fallbackStorage","valid","localStorage","setItem","removeItem","checkLocalStorage","key","string","JSON","stringify","this","getItem","parse","VERSION","gql","MyPage","props","location","history","push","useQuery","loading","error","data","refetch","myPage","LOGINME","Home","useMutation","onCompleted","signIn","id","setTimeout","pathname","login","exact","path","component","to","placeholder","name","required","preventDefault","variables","email","password","HooksUseMemo","mynum","setMynum","List","setList","getAvg","numbers","length","reduce","a","b","avg","useMemo","nextList","concat","map","index","onClickAdd","reducer","value2","inputReducer","HooksUseReducer","useReducer","bio","inputState","inputDispatch","style","width","float","HooksRef","ref","useRef","setstate","current","n","rand","Math","random","HooksCustom","initialForm","useInputs","nickname","array","immutabiltyArray","array2","goodArray","nextto","ImmutabilitySimple","React","memo","nextid","form","setForm","useless","list","onSubmit","onRemove","filter","row","withRouter","httpLink","createHttpLink","uri","credentials","setAuthorizationLink","setContext","request","previousContext","headers","user_id","errorLink","onError","graphQLErrors","networkError","operation","forward","message","extensions","code","link","ApolloLink","from","client","ApolloClient","cache","InMemoryCache","className","HooksUseMemoTouseCallback","ImmutabilityPractice","Boolean","window","hostname","match","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.85e345ab.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\n\ntype CounterProps = {\n  value: number;\n  diff: number;\n  onIncrease: () => void;\n  onDiffNumPlus: (diff: number) => void;\n};\n\nfunction Counter({ value, diff, onIncrease, onDiffNumPlus }: CounterProps) {\n  return (\n    <Fragment>\n      <h1>react-redux</h1>\n      <div>store - container - component</div>\n      <h2>{value}</h2>\n      <button onClick={onIncrease}>+1</button>\n      <button onClick={() => onDiffNumPlus(diff)}>+{diff} jump Number</button>\n    </Fragment>\n  );\n}\n\nexport default Counter;\n","const INCREASE = \"counter/INCREASE\" as const;\nconst DIFFNUMPLUS = \"counter/DIFFNUMPLUS\" as const;\n\ntype CounterAction =\n  | ReturnType<typeof increase>\n  | ReturnType<typeof diffnumplus>;\n\nexport const increase = () => ({ type: INCREASE });\nexport const diffnumplus = (diff: number) => ({\n  type: DIFFNUMPLUS,\n  payload: diff\n});\n\ntype CounterState = {\n  count: number;\n};\nconst initialState: CounterState = {\n  count: 1\n};\n\nfunction counter(state: CounterState = initialState, action: CounterAction) {\n  switch (action.type) {\n    case INCREASE:\n      return { count: state.count + 1 };\n    case DIFFNUMPLUS:\n      /* Since input HTMLElement.value returns a \"String\".... */\n      const parsediff = Number(action.payload);\n      return {\n        ...state,\n        count: parsediff + state.count\n      };\n    default:\n      return state;\n  }\n}\n\nexport default counter;\n","import React, { useState } from 'react';\nimport Counter from '../components/Counter';\nimport { RootState } from '../store/modules/index';\nimport { increase, diffnumplus } from '../store/modules/counter';\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction CounterContainer() {\n  const count = useSelector((state: RootState) => state.counter.count);\n  const dispatch = useDispatch();\n  const [diffNum, setDiffNum] = useState(5);\n\n  const changeDiffNum = (e: any) => {\n    setDiffNum(e.target.value);\n  };\n\n  const onIncrease = () => {\n    dispatch(increase());\n  };\n\n  const onDiffnumplus = (diff: number) => {\n    dispatch(diffnumplus(diff));\n  };\n\n  return (\n    <>\n      <Counter value={count} diff={diffNum} onIncrease={onIncrease} onDiffNumPlus={onDiffnumplus} />\n      <input type=\"text\" onChange={changeDiffNum} value={diffNum} />\n    </>\n  );\n}\n\nexport default CounterContainer;\n","import React, { useState, useEffect, useCallback } from 'react';\n\nfunction HooksUseEffect() {\n  const [book, setBook] = useState<string>('마션');\n  const [mountState, setMountState] = useState<number>(0);\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const changeBookName = (e: any) => {\n    setBook(e.target.value);\n  };\n\n  const changeBookNameHooks = useCallback((e: any) => {\n    setBook(e.target.value);\n  }, []);\n\n  useEffect(() => {\n    console.log('book name 변경');\n    return () => {\n      console.log('clean up');\n    };\n  }, [book]);\n\n  useEffect(() => {\n    console.log('최초 마운트 실행');\n    setMountState(7);\n    return () => {\n      console.log('clean up');\n    };\n  }, []);\n\n  return (\n    <div>\n      <h1>HooksUseEffect</h1>\n      <div>컴포넌트가 렌더링 될 때마다 특정 작업을 수행하도록 하는 Hooks</div>\n      <h2>useEffect Test 01, 특정 값 업데이트 시 실행</h2>\n      <input type=\"text\" onChange={changeBookNameHooks} value={book} />\n      <div>Book State : {book}</div>\n\n      <h2>useEffect Test 02, 최초 마운트에서만 실행</h2>\n      <div>Mount State : {mountState} => 최초 마운트에서만 실행(value 0 to 7)</div>\n    </div>\n  );\n}\n\nexport default HooksUseEffect;\n","const AUTHID = 'auth/AUTHID' as const;\n\ntype AuthAction = ReturnType<typeof authid>;\n\nexport const authid = (userId: string) => ({ type: AUTHID, payload: userId });\n\ntype AuthState = {\n  userId: string;\n};\nconst initialState: AuthState = {\n  userId: '',\n};\n\nfunction auth(state: AuthState = initialState, action: AuthAction) {\n  switch (action.type) {\n    case AUTHID:\n      return {\n        ...state,\n        userId: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default auth;\n","function checkLocalStorage() {\n  try {\n    localStorage.setItem('test', 'test');\n    localStorage.removeItem('test');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nclass FallbackStorage {\n  fallbackStorage: {\n    [key: string]: string;\n  } = {};\n\n  valid: boolean = checkLocalStorage();\n\n  setItem(key: string, value: any) {\n    const string = JSON.stringify(value);\n    if (this.valid) {\n      localStorage.setItem(key, string);\n      return;\n    }\n    this.fallbackStorage[key] = string;\n  }\n\n  getItem(key: string) {\n    let value = this.valid ? localStorage.getItem(key) : this.fallbackStorage[key];\n    try {\n      const parsed = JSON.parse(value || '');\n      return parsed;\n    } catch (e) {\n      return null;\n    }\n  }\n\n  removeItem(key: string) {\n    if (this.valid) {\n      localStorage.removeItem(key);\n      return;\n    }\n    delete this.fallbackStorage[key];\n  }\n}\n\nconst storage = new FallbackStorage();\n\nexport default storage;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport { RouteComponentProps } from 'react-router-dom';\n\nconst VERSION = gql`\n  query {\n    myPage\n  }\n`;\n\nconst MyPage: React.FC<RouteComponentProps> = props => {\n  if (!props.location.state) {\n    props.history.push('/');\n  }\n\n  const { loading, error, data, refetch } = useQuery(VERSION);\n  useEffect(() => {\n    refetch();\n    return () => {};\n  }, [refetch]);\n\n  return (\n    <div>\n      <p>{loading || error ? 'wow' : data.myPage}</p>\n    </div>\n  );\n};\n\nexport default MyPage;\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\n// import { RootState } from '../store/modules/index';\nimport { authid } from '../store/modules/auth';\nimport { useDispatch } from 'react-redux';\n// import { useSelector, useDispatch } from 'react-redux';\nimport storage from '../utils/storage';\nimport { Route, Link } from 'react-router-dom';\nimport MyPage from '../practice/MyPage';\nimport { RouteComponentProps } from 'react-router-dom';\n\nconst LOGINME = gql`\n  mutation($email: String!, $password: String!) {\n    signIn(email: $email, password: $password) {\n      id\n      email\n    }\n  }\n`;\nconst Home: React.FC<RouteComponentProps> = ({ history }) => {\n  // const currentId = useSelector((state: RootState) => state.auth.userId);\n  const dispatch = useDispatch();\n\n  const [login] = useMutation(LOGINME, {\n    onCompleted({ signIn }) {\n      dispatch(authid(signIn.id));\n      storage.setItem('CURRENT_USER', signIn.id);\n      setTimeout(() => {\n        history.push({\n          pathname: '/MyPage',\n          state: {\n            id: signIn.id,\n          },\n        });\n      }, 1000);\n    },\n  });\n\n  const plzcall = (e: any) => {\n    e.preventDefault();\n    login({\n      variables: {\n        email: `test@naver.com`,\n        password: `test1`,\n      },\n    });\n  };\n\n  return (\n    <div>\n      <Route exact path=\"/MyPage\" component={MyPage}></Route>\n      <Link to=\"/MyPage\">MyPage</Link>\n\n      <label>\n        <b>Username</b>\n      </label>\n      <input type=\"text\" placeholder=\"Enter Username\" name=\"uname\" required />\n      <label>\n        <b>Password</b>\n      </label>\n      <input type=\"password\" placeholder=\"Enter Password\" name=\"psw\" required />\n      <button type=\"submit\" onClick={plzcall}>\n        Login\n      </button>\n      <h1>Home</h1>\n      <div>내 맘대로 공부</div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState, useMemo, Fragment } from 'react';\n\nfunction HooksUseMemo() {\n  const [mynum, setMynum] = useState<number>(0);\n  const [List, setList] = useState<number[]>([1, 2]);\n\n  const onChange = (e: any) => {\n    setMynum(e.target.value);\n  };\n\n  const onClickAdd = () => {\n    const nextList = List.concat([Number(mynum)]);\n    setList(nextList);\n  };\n\n  const getAvg = (numbers: number[]) => {\n    if (numbers.length === 0) return 0;\n    else {\n      const sum = numbers.reduce((a, b) => a + b);\n      return sum / numbers.length;\n    }\n  };\n\n  const avg = useMemo(() => getAvg(List), [List]);\n\n  console.log('랜더링');\n\n  return (\n    <Fragment>\n      <h1>UseMemo</h1>\n\n      <input value={mynum} onChange={onChange}></input>\n      <button onClick={onClickAdd}>add</button>\n      <h3>useMemo가 적용되지 않는 계산 값은 Input 박스의 값이 변경될 떄도 렌더링이 진행된다</h3>\n      <div>useMemo 적용 전 평균값 계산 : {getAvg(List)}</div>\n      <h3>useMemo가 적용되어 List가 바뀔 때만 렌더링이 진행된다</h3>\n      <div>useMemo 적용 후 평균값 : {avg}</div>\n      <h2>Number List</h2>\n      <ul>\n        {List.map((value, index) => (\n          <li key={index}>{value}</li>\n        ))}\n      </ul>\n    </Fragment>\n  );\n}\n\nexport default HooksUseMemo;\n","import React, { useState, useMemo, Fragment, useCallback } from 'react';\n\nfunction HooksUseMemo() {\n  const [mynum, setMynum] = useState<number>(0);\n  const [List, setList] = useState<number[]>([2]);\n\n  // const onChange = (e: any) => {\n  //   setMynum(e.target.value);\n  // };\n\n  const onChange = useCallback((e: any) => {\n    setMynum(e.target.value);\n  }, []);\n\n  // const onClickAdd = () => {\n  //   const nextList = List.concat([Number(mynum)]);\n  //   setList(nextList);\n  // };\n\n  const onClickAdd = useCallback(() => {\n    const nextList = List.concat([Number(mynum)]);\n    setList(nextList);\n  }, [List, mynum]);\n\n  const getAvg = (numbers: number[]) => {\n    if (numbers.length === 0) return 0;\n    else {\n      const sum = numbers.reduce((a, b) => a + b);\n      return sum / numbers.length;\n    }\n  };\n\n  const avg = useMemo(() => getAvg(List), [List]);\n  return (\n    <Fragment>\n      <h1>UseCallback</h1>\n      <div>\n        onChange나 onInput이나 등등 e.target.value로 부르는 것과 기능은 같지만, Render를 할 때 함수를 재생성하지 않는 점에 있어서 무조건 이걸\n        사용해야함\n      </div>\n      <br></br>\n      <input value={mynum} onChange={onChange}></input>\n      <button onClick={onClickAdd}>add</button>\n      {/* <h3>useMemo 적용 전 평균값 계산 : {getAvg(List)}</h3> */}\n      <h3>useMemo 적용 후 평균값 : {avg}</h3>\n      <h2>Number List</h2>\n      <ul>\n        {List.map((value, index) => (\n          <li key={index}>{value}</li>\n        ))}\n      </ul>\n    </Fragment>\n  );\n}\n\nexport default HooksUseMemo;\n","import React, { useReducer, Fragment } from 'react';\n\nconst reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case 'INC':\n      return {\n        value: state.value + 1,\n        value2: state.value2 + 3,\n      };\n    default:\n      return false;\n  }\n};\n\nconst inputReducer = (state: any, action: any) => {\n  console.log(action);\n  return {\n    ...state,\n    [action.name]: action.value,\n  };\n};\n\nfunction HooksUseReducer() {\n  const initialState = {\n    value: 10,\n    value2: 10,\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const [inputState, inputDispatch] = useReducer(inputReducer, { name: '', bio: '' });\n  const { name, bio } = inputState;\n  const onChange = (e: any) => {\n    inputDispatch(e.target);\n  };\n\n  return (\n    <Fragment>\n      <div style={{ width: '50%', float: 'left' }}>\n        <h1>useReducer</h1>\n        <div>switch에서 default로 false를 주기 대문에 구문에서 삼항연산자를 한다.</div>\n        <div>value1 : {state !== false ? state.value : 1}</div>\n        <div>value2 : {state !== false ? state.value2 : 1}</div>\n        <br></br>\n        <button onClick={() => dispatch({ type: 'INC' })}>+1</button>\n      </div>\n      <div style={{ width: '50%', float: 'right' }}>\n        <h1>useReducer input</h1>\n        <div>input을 useReducer로 useState를 안쓰고 간소화하자.</div>\n        <input name=\"name\" value={name} onChange={onChange} />\n        <input name=\"bio\" value={bio} onChange={onChange} />\n        <div>이름 : {name}</div>\n        <div>bio : {bio}</div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default HooksUseReducer;\n","import React, { useRef, Fragment, useState } from 'react';\n\nfunction HooksRef() {\n  const ref = useRef(0);\n  const setRef = (n: number) => {\n    ref.current = n;\n  };\n  const ref_random = () => {\n    let rand = Math.random() * 10;\n    setRef(rand);\n  };\n\n  const [state, setstate] = useState(1);\n  const onClike = () => {\n    let rand = Math.random() * 10;\n    setstate(rand);\n  };\n  const printRef = () => {\n    console.log(ref.current);\n  };\n\n  console.log('============랜더링============');\n\n  return (\n    <Fragment>\n      <h1>useRef</h1>\n      <div>ref 변수는 값이 바뀌어도 랜더링이 안됨 즉 아래의 ref.current 는 log를 확인하면 변하지만, 화면에서는 변하지 않음</div>\n      <button onClick={printRef}>ref.current : {ref.current}</button>\n      <button onClick={ref_random}>ref_random</button>\n      <button onClick={onClike}>state : {state}</button>\n    </Fragment>\n  );\n}\n\nexport default HooksRef;\n","import { useReducer } from 'react';\n\nfunction reducer(state: any, action: any) {\n  return {\n    ...state,\n    [action.name]: action.value,\n  };\n}\n\nexport default function useInputs(initialForm: any) {\n  const [state, dispatch] = useReducer(reducer, initialForm);\n  const onChange = (e: any) => {\n    dispatch(e.target);\n  };\n  return [state, onChange];\n}\n","import React, { Fragment } from 'react';\nimport useInputs from '../utils/useInput';\n// 커스텀 훅을 정의해본다.\n\nfunction HooksCustom() {\n  const initialState = {\n    name: '',\n    nickname: '',\n  };\n\n  const [state, onChange] = useInputs(initialState);\n  const { name, nickname } = state;\n\n  return (\n    <Fragment>\n      <h1>HooksCustom</h1>\n      <div>\n        <input name=\"name\" value={name} onChange={onChange}></input>\n        <input name=\"nickname\" value={nickname} onChange={onChange}></input>\n      </div>\n\n      <div>\n        <div>\n          <b>이름:</b> {name}\n        </div>\n        <div>\n          <b>닉네임: </b>\n          {nickname}\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default HooksCustom;\n","import React, { Fragment } from 'react';\n\nconst array = [13, 4, 5, 3];\nconst immutabiltyArray = array;\n\nconst array2 = [1, 2, 3];\nconst goodArray = [...array2];\n\nconst to = [{ id: 1, name: 'te' }];\nconst nextto = [...to];\n\nnextto[0].id = 1;\nconsole.log(to[0] === nextto[0]);\nconsole.log(to === nextto);\n\nfunction ImmutabilitySimple() {\n  return (\n    <Fragment>\n      <h1>SimpleImmutability</h1>\n      <div>불변성을 알아보자 ...data(전개연산자, 스프레드연산자) </div>\n      <h3>{array === immutabiltyArray ? 'array === immutabiltyArray return true' : '다름'}</h3>\n      <h3>{array2 === goodArray ? '같음' : 'array2 === badArray return false'}</h3>\n    </Fragment>\n  );\n}\n\nexport default ImmutabilitySimple;\n","import React, { useState, Fragment, useCallback, useRef } from 'react';\n\nfunction ImmutabilityPractice() {\n  const nextid = useRef(1);\n  const [form, setForm] = useState({ name: '', bio: '' });\n  const [list, setList] = useState<any>({\n    array: [],\n    useless: null,\n  });\n\n  const onChange = useCallback(\n    (e: any) => {\n      const { name, value } = e.target;\n      setForm({\n        ...form,\n        [name]: [value],\n      });\n    },\n    [form],\n  );\n\n  const onSubmit = useCallback(\n    e => {\n      //submit의 새로고침 방지\n      e.preventDefault();\n      const data = {\n        id: nextid.current,\n        name: form.name,\n        bio: form.bio,\n      };\n\n      setList({\n        ...list,\n        array: list.array.concat(data),\n      });\n\n      setForm({\n        name: '',\n        bio: '',\n      });\n      nextid.current++;\n    },\n    [form.bio, form.name, list],\n  );\n\n  const onRemove = useCallback(\n    id => {\n      setList({\n        ...list,\n        array: list.array.filter((row: any) => row.id !== id),\n      });\n    },\n    [list],\n  );\n\n  return (\n    <Fragment>\n      <form onSubmit={onSubmit}>\n        <input name=\"name\" onChange={onChange} value={form.name} />\n        <input name=\"bio\" onChange={onChange} value={form.bio} />\n        <button type=\"submit\">추가</button>\n      </form>\n      <ul>\n        {list.array.map((row: any) => (\n          <li key={row.id} onClick={() => onRemove(row.id)}>\n            {row.name}, {row.bio}\n          </li>\n        ))}\n      </ul>\n    </Fragment>\n  );\n}\n\nexport default React.memo(ImmutabilityPractice);\n","import React, { Fragment } from 'react';\nimport './App.css';\nimport CounterContainer from './containers/CounterContainer';\nimport HooksUseEffect from './practice/HooksUseEffect';\nimport Home from '../src/practice/Home';\nimport HooksUseMemo from './practice/HooksUseMemo';\nimport HooksUseMemoTouseCallback from './practice/HooksUseMemoTouseCallback';\nimport HooksUseReducer from '../src/practice/HooksUseReducer';\nimport HooksRef from '../src/practice/HooksRef';\nimport HooksCustom from '../src/practice/HooksCustom';\nimport ImmutabilitySimple from './practice/ImmutabilitySimple';\nimport ImmutabilityPractice from './practice/ImmutabilityPractice';\nimport { Route, Link, Switch, withRouter } from 'react-router-dom';\nimport MyPage from './practice/MyPage';\nimport ApolloClient from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { createHttpLink } from 'apollo-link-http';\nimport { ApolloLink } from 'apollo-link';\nimport { onError } from 'apollo-link-error';\nimport { setContext } from 'apollo-link-context';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { RouteComponentProps } from 'react-router-dom';\n\nimport storage from './utils/storage';\n\nconst App: React.FC<RouteComponentProps> = props => {\n  const httpLink = createHttpLink({ uri: 'http://localhost:4001/graphql', credentials: 'include' });\n\n  const setAuthorizationLink = setContext((request, previousContext) => ({\n    headers: { user_id: storage.getItem('CURRENT_USER') || null },\n  }));\n\n  const errorLink = onError(({ graphQLErrors, networkError, operation, forward }) => {\n    if (graphQLErrors)\n      graphQLErrors.map(({ message, extensions }) => {\n        if (extensions) {\n          switch (extensions.code) {\n            case 'data-exception':\n            case 'validation-failed':\n              props.history.push('/error'); // redirect to something-went-wrong page\n              break;\n            default:\n              // default case\n              props.history.push('/error'); // redirect to something-went-wrong page\n\n              console.log(extensions.code);\n          }\n        }\n      });\n    if (networkError) {\n      console.log(`[Network error]: ${networkError}`);\n      props.history.push('/error');\n    }\n  });\n\n  // use with apollo-client\n  const link = ApolloLink.from([setAuthorizationLink, errorLink, httpLink]);\n\n  const client = new ApolloClient({\n    link,\n    cache: new InMemoryCache(),\n  });\n\n  return (\n    <Fragment>\n      <ApolloProvider client={client}>\n        <div className=\"Content\">\n          <Switch>\n            <Route exact path=\"/\" component={Home}></Route>\n            <Route exact path=\"/CounterContainer\" component={CounterContainer}></Route>\n            <Route exact path=\"/HooksUseEffect\" component={HooksUseEffect}></Route>\n            <Route exact path=\"/HooksUseMemo\" component={HooksUseMemo}></Route>\n            <Route exact path=\"/HooksUseMemoTouseCallback\" component={HooksUseMemoTouseCallback}></Route>\n            <Route exact path=\"/HooksUseReducer\" component={HooksUseReducer}></Route>\n            <Route exact path=\"/HooksRef\" component={HooksRef}></Route>\n            <Route exact path=\"/ImmutabilitySimple\" component={ImmutabilitySimple}></Route>\n            <Route exact path=\"/ImmutabilityPractice\" component={ImmutabilityPractice}></Route>\n            <Route exact path=\"/HooksCustom\" component={HooksCustom}></Route>\n            <Route exact path=\"/MyPage\" component={MyPage}></Route>\n            <Route path=\"*\" component={HooksUseMemo} />\n            <Route path=\"/error\" component={HooksUseMemo} />\n          </Switch>\n        </div>\n        <div className=\"Mmenu\">\n          <ul>\n            <li>\n              <Link to=\"/\">HOME</Link>\n            </li>\n            <li>\n              <Link to=\"/MyPage\">MyPage</Link>\n            </li>\n            <li>\n              <Link to=\"/CounterContainer\">CounterContainer</Link>\n            </li>\n            <li>\n              <Link to=\"/HooksUseEffect\">HooksUseEffect</Link>\n            </li>\n            <li>\n              <Link to=\"/HooksUseMemo\">HooksUseMemo</Link>\n            </li>\n            <li>\n              <Link to=\"/HooksUseMemoTouseCallback\">HooksUseMemoTouseCallback</Link>\n            </li>\n            <li>\n              <Link to=\"/HooksUseReducer\">HooksUseReducer</Link>\n            </li>\n            <li>\n              <Link to=\"/HooksRef\">HooksRef</Link>\n            </li>\n            <li>\n              <Link to=\"/ImmutabilitySimple\">ImmutabilitySimple</Link>\n            </li>\n            <li>\n              <Link to=\"/ImmutabilityPractice\">ImmutabilityPractice</Link>\n            </li>\n            <li>\n              <Link to=\"/HooksCustom\">HooksCustom</Link>\n            </li>\n          </ul>\n        </div>\n      </ApolloProvider>\n    </Fragment>\n  );\n};\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport counter from './counter';\nimport auth from './auth';\n\nconst rootReducer = combineReducers({\n  counter,\n  auth,\n});\n\nexport default rootReducer;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './store/modules';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}